{"ast":null,"code":"import _classCallCheck from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/CharactersResults/index.js\";\nimport React, { Component } from 'react';\nimport logic from '../Logic';\nimport MultipleResults from '../MultipleResults';\n\nvar CharactersResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CharactersResults, _Component);\n\n  function CharactersResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CharactersResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CharactersResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: null,\n      feedback: null\n    };\n\n    _this.handleSearch = function (query) {\n      try {\n        logic.searchCharacter(query).then(function (characters) {\n          var results = characters.results;\n\n          _this.setState({\n            feedback: null,\n            characters: results.map(function (_ref) {\n              var id = _ref.id,\n                  name = _ref.name,\n                  _ref$thumbnail = _ref.thumbnail,\n                  path = _ref$thumbnail.path,\n                  extension = _ref$thumbnail.extension;\n              return {\n                id: id,\n                name: name,\n                path: path,\n                extension: extension\n              };\n            })\n          });\n        }).catch(function (_ref2) {\n          var message = _ref2.message;\n          return _this.setState({\n            feedback: message,\n            characters: null\n          });\n        });\n      } catch (_ref3) {\n        var message = _ref3.message;\n\n        _this.setState({\n          feedback: message,\n          characters: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CharactersResults, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var query = this.props.query;\n      this.handleSearch(query);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var query = nextProps.query;\n      this.handleSearch(query);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          characters = _this$state.characters,\n          feedback = _this$state.feedback,\n          onCharacterSelected = this.props.onCharacterSelected;\n      return React.createElement(MultipleResults, {\n        results: characters,\n        feedback: feedback,\n        onItemClick: onCharacterSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CharactersResults;\n}(Component);\n\nexport default CharactersResults;","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/CharactersResults/index.js"],"names":["React","Component","logic","MultipleResults","CharactersResults","state","characters","feedback","handleSearch","query","searchCharacter","then","results","setState","map","id","name","thumbnail","path","extension","catch","message","props","nextProps","onCharacterSelected"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;IAEMC,iB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,K;;UAYRC,Y,GAAe,UAAAC,KAAK,EAAI;AACpB,UAAI;AACAP,QAAAA,KAAK,CAACQ,eAAN,CAAsBD,KAAtB,EACKE,IADL,CACU,UAAAL,UAAU,EAAI;AAAA,cACTM,OADS,GACEN,UADF,CACTM,OADS;;AAEhB,gBAAKC,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAE,IADA;AAEVD,YAAAA,UAAU,EAAEM,OAAO,CAACE,GAAR,CAAY;AAAA,kBAAGC,EAAH,QAAGA,EAAH;AAAA,kBAAOC,IAAP,QAAOA,IAAP;AAAA,wCAAaC,SAAb;AAAA,kBAAyBC,IAAzB,kBAAyBA,IAAzB;AAAA,kBAA8BC,SAA9B,kBAA8BA,SAA9B;AAAA,qBAAgD;AAACJ,gBAAAA,EAAE,EAAFA,EAAD;AAAKC,gBAAAA,IAAI,EAAJA,IAAL;AAAWE,gBAAAA,IAAI,EAAJA,IAAX;AAAiBC,gBAAAA,SAAS,EAATA;AAAjB,eAAhD;AAAA,aAAZ;AAFF,WAAd;AAIH,SAPL,EAQKC,KARL,CAQW;AAAA,cAAGC,OAAH,SAAGA,OAAH;AAAA,iBAAiB,MAAKR,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAEc,OAAZ;AAAqBf,YAAAA,UAAU,EAAE;AAAjC,WAAd,CAAjB;AAAA,SARX;AASH,OAVD,CAUE,cAAoB;AAAA,YAAXe,OAAW,SAAXA,OAAW;;AAClB,cAAKR,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEc,OAAZ;AAAqBf,UAAAA,UAAU,EAAE;AAAjC,SAAd;AACH;AACJ,K;;;;;;;yCAxBoB;AAAA,UACAG,KADA,GACY,IADZ,CACTa,KADS,CACAb,KADA;AAEjB,WAAKD,YAAL,CAAkBC,KAAlB;AACH;;;8CAEyBc,S,EAAW;AAAA,UACzBd,KADyB,GACfc,SADe,CACzBd,KADyB;AAEjC,WAAKD,YAAL,CAAkBC,KAAlB;AACH;;;6BAkBQ;AAAA,wBACmE,IADnE,CACGJ,KADH;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,QADvB,eACuBA,QADvB;AAAA,UAC0CiB,mBAD1C,GACmE,IADnE,CACkCF,KADlC,CAC0CE,mBAD1C;AAGL,aAAQ,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAElB,UAA1B;AAAsC,QAAA,QAAQ,EAAEC,QAAhD;AAA0D,QAAA,WAAW,EAAEiB,mBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;;;EAlC2BvB,S;;AAqChC,eAAeG,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport logic from '../Logic';\nimport MultipleResults from '../MultipleResults'\n\nclass CharactersResults extends Component {\n\n    state = { characters: null, feedback: null }\n    \n    componentWillMount() {\n        const { props: { query } } = this\n        this.handleSearch(query)\n    }\n\n    componentWillReceiveProps(nextProps) {    \n        const { query } = nextProps\n        this.handleSearch(query)\n    }\n\n    handleSearch = query => {\n        try {\n            logic.searchCharacter(query)\n                .then(characters => {\n                    const {results} = characters\n                    this.setState({\n                        feedback: null,\n                        characters: results.map(({ id, name, thumbnail: {path,extension} }) => ({id, name, path, extension}))\n                    })\n                })\n                .catch(({ message }) => this.setState({ feedback: message, characters: null }))\n        } catch ({ message }) {\n            this.setState({ feedback: message, characters: null })\n        }\n    }\n\n    render() {\n        const { state: {characters, feedback}, props: {onCharacterSelected} } = this;\n\n        return  <MultipleResults results={characters} feedback={feedback} onItemClick={onCharacterSelected}/>\n    }\n}\n\nexport default CharactersResults;"]},"metadata":{},"sourceType":"module"}