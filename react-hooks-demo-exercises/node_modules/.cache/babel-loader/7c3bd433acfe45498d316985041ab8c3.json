{"ast":null,"code":"import _classCallCheck from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/CharactersResults/index.js\";\nimport React, { Component } from 'react';\nimport MultipleResults from '../MultipleResults';\n\nvar CharactersResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CharactersResults, _Component);\n\n  function CharactersResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CharactersResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CharactersResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: null,\n      feedback: null\n    };\n    return _this;\n  }\n\n  _createClass(CharactersResults, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var characters = this.props.characters;\n      this.setState(characters);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var query = nextProps.query;\n      this.handleSearch(query);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          characters = _this$state.characters,\n          feedback = _this$state.feedback,\n          onCharacterSelected = this.props.onCharacterSelected;\n      return React.createElement(MultipleResults, {\n        characters: characters,\n        feedback: feedback,\n        onItemClick: onCharacterSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CharactersResults;\n}(Component);\n\nexport default CharactersResults;","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/CharactersResults/index.js"],"names":["React","Component","MultipleResults","CharactersResults","state","characters","feedback","props","setState","nextProps","query","handleSearch","onCharacterSelected"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;IAEMC,iB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,K;;;;;;yCAEa;AAAA,UACAD,UADA,GACiB,IADjB,CACTE,KADS,CACAF,UADA;AAEjB,WAAKG,QAAL,CAAcH,UAAd;AACH;;;8CAEyBI,S,EAAW;AAAA,UACzBC,KADyB,GACfD,SADe,CACzBC,KADyB;AAEjC,WAAKC,YAAL,CAAkBD,KAAlB;AACH;;;6BAEQ;AAAA,wBACmE,IADnE,CACGN,KADH;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,QADvB,eACuBA,QADvB;AAAA,UAC0CM,mBAD1C,GACmE,IADnE,CACkCL,KADlC,CAC0CK,mBAD1C;AAGL,aAAQ,oBAAC,eAAD;AAAiB,QAAA,UAAU,EAAEP,UAA7B;AAAyC,QAAA,QAAQ,EAAEC,QAAnD;AAA6D,QAAA,WAAW,EAAEM,mBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;;;EAlB2BX,S;;AAqBhC,eAAeE,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport MultipleResults from '../MultipleResults'\n\nclass CharactersResults extends Component {\n\n    state = { characters: null, feedback: null}\n    \n    componentWillMount() {\n        const { props: { characters } } = this\n        this.setState(characters)\n    }\n\n    componentWillReceiveProps(nextProps) {    \n        const { query } = nextProps\n        this.handleSearch(query)\n    }\n\n    render() {\n        const { state: {characters, feedback}, props: {onCharacterSelected} } = this;\n\n        return  <MultipleResults characters={characters} feedback={feedback} onItemClick={onCharacterSelected}/>\n    }\n}\n\nexport default CharactersResults;"]},"metadata":{},"sourceType":"module"}