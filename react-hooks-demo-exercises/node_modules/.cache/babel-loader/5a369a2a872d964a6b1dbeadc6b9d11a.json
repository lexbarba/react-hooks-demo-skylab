{"ast":null,"code":"import _objectSpread from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/src/components/Counter/index-component.js\";\nimport React, { Component } from 'react';\nexport default function Counter() {\n  var _useReducer = useReducer(function (state, action) {\n    switch (action) {\n      case 'add':\n        return _objectSpread({}, state, {\n          count: state.count + 1,\n          loading: false\n        });\n\n      case 'substract':\n        return _objectSpread({}, state, {\n          count: state.count - 1,\n          loading: false\n        });\n\n      case 'reset':\n        return _objectSpread({}, state, {\n          count: 0,\n          loading: false\n        });\n\n      case 'loading':\n        return _objectSpread({}, state, {\n          loading: true\n        });\n\n      default:\n        return state;\n    }\n  }, {\n    loading: false,\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      count = _useReducer2$.count,\n      loading = _useReducer2$.loading,\n      setCount = _useReducer2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      setCount('loading');\n      setTimeout(function () {\n        setCount('substract');\n      }, 1000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, loading ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \" favourite__loading fas fa-spinner fa-spin fa-1x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \") : count), React.createElement(\"button\", {\n    onClick: function onClick() {\n      setCount('loading');\n      setTimeout(function () {\n        setCount('add');\n      }, 1000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      setCount('loading');\n      setTimeout(function () {\n        setCount('reset');\n      }, 1000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Reset\"));\n}","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/src/components/Counter/index-component.js"],"names":["React","Component","Counter","useReducer","state","action","count","loading","setCount","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,oBAEOC,UAAU,CAAC,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAEnE,YAAQA,MAAR;AACE,WAAK,KAAL;AACE,iCAAWD,KAAX;AAAkBE,UAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc,CAAvC;AAA0CC,UAAAA,OAAO,EAAE;AAAnD;;AACF,WAAK,WAAL;AACE,iCAAWH,KAAX;AAAkBE,UAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc,CAAvC;AAA0CC,UAAAA,OAAO,EAAE;AAAnD;;AACF,WAAK,OAAL;AACE,iCAAYH,KAAZ;AAAmBE,UAAAA,KAAK,EAAE,CAA1B;AAA6BC,UAAAA,OAAO,EAAE;AAAtC;;AACF,WAAK,SAAL;AACE,iCAAYH,KAAZ;AAAmBG,UAAAA,OAAO,EAAE;AAA5B;;AACF;AACE,eAAOH,KAAP;AAVJ;AAYD,GAdgD,EAc9C;AACDG,IAAAA,OAAO,EAAE,KADR;AAEDD,IAAAA,KAAK,EAAE;AAFN,GAd8C,CAFjB;AAAA;AAAA;AAAA,MAEvBA,KAFuB,iBAEvBA,KAFuB;AAAA,MAEhBC,OAFgB,iBAEhBA,OAFgB;AAAA,MAELC,QAFK;;AAqBhC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AACrBA,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAC,MAAAA,UAAU,CAAC,YAAW;AAACD,QAAAA,QAAQ,CAAC,WAAD,CAAR;AAAsB,OAAnC,EAAqC,IAArC,CAAV;AACC,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM;AAAG,IAAA,SAAS,EAAC,kDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,MAAH,GAAqFD,KAAnG,CALF,EAME;AAAQ,IAAA,OAAO,EAAE,mBAAM;AACrBE,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAC,MAAAA,UAAU,CAAC,YAAW;AAACD,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAAgB,OAA7B,EAA+B,IAA/B,CAAV;AACC,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AACrBA,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAC,MAAAA,UAAU,CAAC,YAAW;AAACD,QAAAA,QAAQ,CAAC,OAAD,CAAR;AAAkB,OAA/B,EAAiC,IAAjC,CAAV;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF;AAkBD","sourcesContent":["import React, { Component } from 'react'\n\nexport default function Counter() {\n\n  const [{ count, loading }, setCount] = useReducer((state, action) => {\n\n    switch (action) {\n      case 'add':\n        return {...state, count: state.count + 1, loading: false}\n      case 'substract':\n        return {...state, count: state.count - 1, loading: false}\n      case 'reset':\n        return { ...state, count: 0, loading: false }\n      case 'loading':\n        return { ...state, loading: true }\n      default:\n        return state\n    }\n  }, {\n    loading: false,\n    count: 0,\n  })\n  \n  return (\n    <div>\n      <button onClick={() => {\n        setCount('loading' ) \n        setTimeout(function() {setCount('substract')}, 1000)\n        }}>-</button>\n      <span>{loading ? <span><i className=\" favourite__loading fas fa-spinner fa-spin fa-1x\" /> </span>: count}</span>\n      <button onClick={() => {\n        setCount('loading') \n        setTimeout(function() {setCount('add')}, 1000)\n        }}>+</button>\n      <br />\n      <button onClick={() => {\n        setCount('loading') \n        setTimeout(function() {setCount('reset')}, 1000)\n      }}>Reset</button>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}