{"ast":null,"code":"import _classCallCheck from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/ComicInfoResult/index.js\";\nimport React, { Component } from 'react';\nimport logic from '../Logic';\nimport PaintComic from '../PaintComic';\n\nvar ComicInfoResult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComicInfoResult, _Component);\n\n  function ComicInfoResult() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComicInfoResult);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComicInfoResult)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comic: null,\n      feedback: null\n    };\n\n    _this.handleComicSelected = function (id) {\n      try {\n        logic.retrieveComic(id).then(function (comic) {\n          _this.setState({\n            comic: comic.results[0],\n            feedback: null\n          });\n        }).catch(function (_ref) {\n          var message = _ref.message;\n          return _this.setState({\n            feedback: message,\n            comic: null\n          });\n        });\n      } catch (_ref2) {\n        var message = _ref2.message;\n\n        _this.setState({\n          feedback: message,\n          comic: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ComicInfoResult, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var id = this.props.id;\n      this.handleComicSelected(id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var id = nextProps.id;\n      this.handleComicSelected(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          comic = _this$state.comic,\n          feedback = _this$state.feedback,\n          _this$props = this.props,\n          onCharacterSelected = _this$props.onCharacterSelected,\n          moreInfo = _this$props.moreInfo,\n          price = _this$props.price,\n          characters = _this$props.characters;\n      return React.createElement(PaintComic, {\n        results: comic,\n        feedback: feedback,\n        onItemClick: onCharacterSelected,\n        moreInfo: moreInfo,\n        price: price,\n        characters: characters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ComicInfoResult;\n}(Component);\n\nexport default ComicInfoResult;","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/marvel-app/src/components/ComicInfoResult/index.js"],"names":["React","Component","logic","PaintComic","ComicInfoResult","state","comic","feedback","handleComicSelected","id","retrieveComic","then","setState","results","catch","message","props","nextProps","onCharacterSelected","moreInfo","price","characters"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IAEMC,e;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,K;;UAYRC,mB,GAAsB,UAAAC,EAAE,EAAI;AACxB,UAAI;AACAP,QAAAA,KAAK,CAACQ,aAAN,CAAoBD,EAApB,EACKE,IADL,CACU,UAAAL,KAAK,EAAI;AACX,gBAAKM,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAc,CAAd,CAAR;AAA0BN,YAAAA,QAAQ,EAAE;AAApC,WAAd;AACH,SAHL,EAIKO,KAJL,CAIW;AAAA,cAAGC,OAAH,QAAGA,OAAH;AAAA,iBAAiB,MAAKH,QAAL,CAAc;AAAEL,YAAAA,QAAQ,EAAEQ,OAAZ;AAAqBT,YAAAA,KAAK,EAAE;AAA5B,WAAd,CAAjB;AAAA,SAJX;AAKH,OAND,CAME,cAAoB;AAAA,YAAXS,OAAW,SAAXA,OAAW;;AAClB,cAAKH,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEQ,OAAZ;AAAqBT,UAAAA,KAAK,EAAE;AAA5B,SAAd;AACH;AACJ,K;;;;;;;yCApBoB;AAAA,UACAG,EADA,GACS,IADT,CACTO,KADS,CACAP,EADA;AAEjB,WAAKD,mBAAL,CAAyBC,EAAzB;AACH;;;8CAEyBQ,S,EAAW;AAAA,UACzBR,EADyB,GAClBQ,SADkB,CACzBR,EADyB;AAEjC,WAAKD,mBAAL,CAAyBC,EAAzB;AACH;;;6BAcQ;AAAA,wBAC0F,IAD1F,CACGJ,KADH;AAAA,UACUC,KADV,eACUA,KADV;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,wBAC0F,IAD1F,CAC4BS,KAD5B;AAAA,UACoCE,mBADpC,eACoCA,mBADpC;AAAA,UACyDC,QADzD,eACyDA,QADzD;AAAA,UACmEC,KADnE,eACmEA,KADnE;AAAA,UAC0EC,UAD1E,eAC0EA,UAD1E;AAGL,aAAO,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEf,KAArB;AAA4B,QAAA,QAAQ,EAAEC,QAAtC;AAAgD,QAAA,WAAW,EAAEW,mBAA7D;AAAkF,QAAA,QAAQ,EAAEC,QAA5F;AAAsG,QAAA,KAAK,EAAEC,KAA7G;AAAoH,QAAA,UAAU,EAAEC,UAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EA9ByBpB,S;;AAiC9B,eAAeG,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport logic from '../Logic'\nimport PaintComic from '../PaintComic'\n\nclass ComicInfoResult extends Component {\n\n    state = { comic: null, feedback: null }\n\n    componentWillMount() {\n        const { props: { id } } = this\n        this.handleComicSelected(id)\n    }\n\n    componentWillReceiveProps(nextProps) {    \n        const { id } = nextProps\n        this.handleComicSelected(id)\n    }\n\n    handleComicSelected = id => {\n        try {\n            logic.retrieveComic(id)\n                .then(comic => {\n                    this.setState({comic: comic.results[0], feedback: null})\n                })\n                .catch(({ message }) => this.setState({ feedback: message, comic: null }))\n        } catch ({ message }) {\n            this.setState({ feedback: message, comic: null })\n        }\n    }\n\n    render() {\n        const { state:{comic, feedback}, props: {onCharacterSelected, moreInfo, price, characters} } = this;\n\n        return <PaintComic results={comic} feedback={feedback} onItemClick={onCharacterSelected} moreInfo={moreInfo} price={price} characters={characters}/>\n    }\n}\n\nexport default ComicInfoResult;"]},"metadata":{},"sourceType":"module"}