{"ast":null,"code":"import _defineProperty from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nexport default function useCustomHook(initialValue) {\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    // event.persist()\n    setValues(function (values) {\n      return _objectSpread({}, values, _defineProperty({}, e.target.name, e.target.value));\n    });\n  };\n\n  return {\n    values: values,\n    onChange: handleChange\n  };\n}","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/src/components/CustomHook/index.js"],"names":["useState","useCustomHook","initialValue","values","setValues","handleChange","e","target","name","value","onChange"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,eAAe,SAASC,aAAT,CAAuBC,YAAvB,EAAqC;AAAA,kBACpBF,QAAQ,CAACE,YAAD,CADY;AAAA;AAAA,MACzCC,MADyC;AAAA,MACjCC,SADiC;;AAGhD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxB;AACAF,IAAAA,SAAS,CAAC,UAAAD,MAAM;AAAA,+BAAUA,MAAV,sBAAmBG,CAAC,CAACC,MAAF,CAASC,IAA5B,EAAmCF,CAAC,CAACC,MAAF,CAASE,KAA5C;AAAA,KAAP,CAAT;AACD,GAHD;;AAKA,SAAO;AACLN,IAAAA,MAAM,EAANA,MADK;AAELO,IAAAA,QAAQ,EAAEL;AAFL,GAAP;AAID","sourcesContent":["import {useState} from 'react'\n\nexport default function useCustomHook(initialValue) {\n    const [values, setValues] = useState(initialValue);\n\n    const handleChange = e => {\n      // event.persist()\n      setValues(values => ({ ...values, [e.target.name]: e.target.value }));\n    }\n  \n    return {\n      values,\n      onChange: handleChange\n    }\n  }"]},"metadata":{},"sourceType":"module"}