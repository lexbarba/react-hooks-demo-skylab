{"ast":null,"code":"import _slicedToArray from \"/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// import { useState } from 'react'\n// export default function useCustomHook() {\n//     const [values, setValues] = useState({})\n//     const handleChange = e => {\n//       console.log(values)\n//       e.persist()\n//       setValues(values => ({ ...values, [e.target.name]: e.target.value }))\n//       prompt(values)\n//     }\n//     const handleSubmit = e => {\n//       debugger\n//       if (e) e.preventDefault()\n//       alert(`Email: ${values.email}, Password:${values.password}`)\n//     }\n//     return {\n//       values,\n//       onChange: handleChange,\n//       onSubmit: handleSubmit\n//     }\n// }\nimport { useState } from 'react';\n\nvar useCustomHook = function useCustomHook() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowing = _useState2[0],\n      setIsShowing = _useState2[1];\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing: isShowing,\n    toggle: toggle\n  };\n};\n\nexport default useCustomHook;","map":{"version":3,"sources":["/Users/alexbarba/bootcamp/react-hooks-demo/react-hooks-demo-exercises/src/components/CustomHook/index.js"],"names":["useState","useCustomHook","isShowing","setIsShowing","toggle"],"mappings":";AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACQD,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACnBE,SADmB;AAAA,MACRC,YADQ;;AAG1B,WAASC,MAAT,GAAkB;AAChBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,SAAO;AACLA,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID,CAXD;;AAaA,eAAeH,aAAf","sourcesContent":["// import { useState } from 'react'\n\n// export default function useCustomHook() {\n\n//     const [values, setValues] = useState({})\n\n//     const handleChange = e => {\n//       console.log(values)\n//       e.persist()\n//       setValues(values => ({ ...values, [e.target.name]: e.target.value }))\n//       prompt(values)\n//     }\n\n//     const handleSubmit = e => {\n//       debugger\n//       if (e) e.preventDefault()\n//       alert(`Email: ${values.email}, Password:${values.password}`)\n//     }\n  \n//     return {\n//       values,\n//       onChange: handleChange,\n//       onSubmit: handleSubmit\n//     }\n// }\n\nimport { useState } from 'react';\n\nconst useCustomHook = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  }\n};\n\nexport default useCustomHook\n"]},"metadata":{},"sourceType":"module"}